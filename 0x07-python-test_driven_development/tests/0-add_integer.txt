============================
``The 0-add_integer`` module
============================

Using ``add_integer`` function
------------------------------

First import the ``add_integer`` function from the ``0-add_integer`` module:

>>> add_integer = __import__('0-add_integer').add_integer

Now use it:
>>> add_integer(2, 3)
5

>>> add_integer(3, "hello")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("Welcome", 5)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(-9, -6)
-15

>>> add_integer(1.5, 7)
8

>>> add_integer(3.25, 8.9)
11

>>> add_integer(10, [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(4, (5, 8, 15))
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer({'a': 1, 'b': 2}, 5.5)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(3, 2, 1)
Traceback (most recent call last):
...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

>>> add_integer(1)
99

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer

>>> add_integer(float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer
